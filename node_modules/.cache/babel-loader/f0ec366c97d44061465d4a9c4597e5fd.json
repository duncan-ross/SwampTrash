{"ast":null,"code":"import _classCallCheck from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/duncanross/Desktop/SwampTrash/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.checkMimeType = function (event) {\n      //getting file object\n      var files = event.target.files; //define message container\n\n      var err = []; // list allow mime type\n\n      var types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(function (type) {\n          return files[x].type !== type;\n        })) {\n          // create error message and assign to container   \n          err[x] = files[x].type + ' is not a supported format.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.maxSelectFile = function (event) {\n      var files = event.target.files;\n\n      if (files.length > 3) {\n        var msg = 'Only 3 images can be uploaded at a time';\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.checkFileSize = function (event) {\n      var files = event.target.files;\n      var size = 2000000;\n      var err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + 'is too large, please pick a smaller file.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.onChangeHandler = function (event) {\n      var files = event.target.files;\n\n      if (_this.maxSelectFile(event) && _this.checkMimeType(event) && _this.checkFileSize(event)) {\n        // if return true allow to setState\n        _this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    _this.onClickHandler = function () {\n      var data = new FormData();\n\n      if (_this.state.selectedFile != null) {\n        for (var x = 0; x < _this.state.selectedFile.length; x++) {\n          data.append('file', _this.state.selectedFile[x]);\n        }\n\n        axios.post(\"http://localhost:8000/upload\", data, {\n          onUploadProgress: function onUploadProgress(ProgressEvent) {\n            _this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(function (res) {\n          // then print response status\n          var base = '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';\n          var result, confidence;\n          var outputJSON;\n          toast.success('Upload Successful');\n          axios.defaults.headers.common['Content-Type'] = \"application/json\";\n          axios.defaults.headers.common['Authorization'] = \"Bearer ya29.c.Ko8BvweiEswHjnW0B4ym9z1sfuQ6qpa3R8GYdpxYa67pHOhFULl6VmUVVS4N15j0QcA4wKULUpGbb2rng50AA53VEJVl33P2tBzu4HYFce9IwTSMfljBzLNsi8Qem87KjoPVaknOCt8sR_w7VwnEdkAggHnEb32zILlZ7qrueDa1M-L6bngebz_PPg83UWMgyvg\"\n          /* Copy token key here */\n          ;\n          axios.post(\"https://automl.googleapis.com/v1beta1/projects/766644774605/locations/us-central1/models/ICN5802549470285529088:predict\", {\n            \"payload\": {\n              \"image\": {\n                \"imageBytes\": base\n              }\n            }\n          }).then(function (res) {\n            console.log(res);\n\n            if (Object.keys(res.data).length == 0) {\n              result = 'trash';\n              confidence = 99;\n            } else {\n              result = res.data.payload[0].displayName;\n              confidence = res.data.payload[0].classification.score;\n              confidence = confidence * 100;\n              confidence = Math.round(confidence);\n            }\n\n            var temp = {\n              \"result\": result,\n              \"confidence\": confidence\n            };\n            temp = JSON.stringify(temp);\n            outputJSON = JSON.parse(temp);\n            console.log(outputJSON); //     fs.writeFile('output.json', JSON.stringify(outputJSON), 'utf8', (err, data) => {\n            //         if (err) console.log(err);\n            //         else console.log('written');\n            // });\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }).catch(function (err) {\n          // then print response status\n          toast.error('Upload Failed');\n        });\n      } else {\n        toast.error('No file selected.');\n      }\n    };\n\n    _this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"offset-md-3 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Upload Your File \"), React.createElement(\"input\", {\n        type: \"file\",\n        class: \"form-control\",\n        multiple: true,\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Progress, {\n        max: \"100\",\n        color: \"success\",\n        value: this.state.loaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Upload\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/duncanross/Desktop/SwampTrash/src/App.js"],"names":["React","Component","useState","axios","Progress","ToastContainer","toast","base64","App","props","checkMimeType","event","files","target","err","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","then","res","base","result","confidence","outputJSON","success","defaults","headers","common","console","log","Object","keys","payload","displayName","classification","score","Math","round","temp","JSON","stringify","parse","catch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded:0\n      }\n\n  }\n  \n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = []\n    // list allow mime type\n   const types = ['image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for(var x = 0; x<files.length; x++) {\n     // compare file type find doesn't matach\n         if (types.every(type => files[x].type !== type)) {\n         // create error message and assign to container   \n         err[x] = files[x].type+' is not a supported format.\\n';\n       }\n     };\n     for(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n         // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n   return true;\n  }\n  maxSelectFile=(event)=>{\n    let files = event.target.files\n        if (files.length > 3) { \n           const msg = 'Only 3 images can be uploaded at a time'\n           event.target.value = null\n           toast.warn(msg)\n           return false;\n      }\n    return true;\n }\n checkFileSize=(event)=>{\n  let files = event.target.files\n  let size = 2000000 \n  let err = []; \n  for(var x = 0; x<files.length; x++) {\n  if (files[x].size > size) {\n   err[x] = files[x].type+'is too large, please pick a smaller file.\\n';\n }\n};\nfor(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n  // discard selected file\n toast.error(err[z])\n event.target.value = null\n}\nreturn true;\n}\nonChangeHandler=event=>{\n  var files = event.target.files\n  if(this.maxSelectFile(event) && this.checkMimeType(event) &&    this.checkFileSize(event)){ \n  // if return true allow to setState\n     this.setState({\n     selectedFile: files,\n     loaded:0\n  })\n}\n}\n  onClickHandler = () => {\n    const data = new FormData()\n    if(this.state.selectedFile != null){ \n    for(var x = 0; x<this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x])\n    }\n    axios.post(\"http://localhost:8000/upload\", data, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n      },\n    })\n      .then(res => { // then print response status\n        var base = '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'\n        let result, confidence;\n        let outputJSON;\n        toast.success('Upload Successful')\n\n        axios.defaults.headers.common['Content-Type'] = \"application/json\";\n        axios.defaults.headers.common['Authorization'] = \"Bearer ya29.c.Ko8BvweiEswHjnW0B4ym9z1sfuQ6qpa3R8GYdpxYa67pHOhFULl6VmUVVS4N15j0QcA4wKULUpGbb2rng50AA53VEJVl33P2tBzu4HYFce9IwTSMfljBzLNsi8Qem87KjoPVaknOCt8sR_w7VwnEdkAggHnEb32zILlZ7qrueDa1M-L6bngebz_PPg83UWMgyvg\"/* Copy token key here */;\n\n        axios.post(\"https://automl.googleapis.com/v1beta1/projects/766644774605/locations/us-central1/models/ICN5802549470285529088:predict\",\n            {\n                \"payload\": {\n                    \"image\": {\n                        \"imageBytes\": base\n                    }\n                }\n            }).then(function(res){\n                console.log(res);\n                if (Object.keys(res.data).length == 0){\n                    result = 'trash'\n                    confidence = 99;\n                } else{\n                    result = res.data.payload[0].displayName;\n                    confidence = res.data.payload[0].classification.score;\n                    confidence = confidence * 100;\n                    confidence = Math.round(confidence);\n                }\n    \n                let temp = {\n                    \"result\" : result,\n                    \"confidence\" : confidence\n                };\n    \n                temp = JSON.stringify(temp);\n    \n                outputJSON = JSON.parse(temp);\n                console.log(outputJSON);\n            //     fs.writeFile('output.json', JSON.stringify(outputJSON), 'utf8', (err, data) => {\n            //         if (err) console.log(err);\n            //         else console.log('written');\n            // });\n        }).catch(function(err) {\n            console.log(err);\n        });\n      })\n      .catch(err => { // then print response status\n        toast.error('Upload Failed')\n      })\n    }\n    else{\n      toast.error('No file selected.')\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n\t      <div class=\"row\">\n      \t  <div class=\"offset-md-3 col-md-6\">\n               <div class=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler}/>\n              </div>  \n              <div class=\"form-group\">\n              <ToastContainer />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n        \n              </div> \n              \n              <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n\n\t      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}