{"ast":null,"code":"var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport default {\n  encode: function encode(input) {\n    var output = \"\";\n    var chr1,\n        chr2,\n        chr3 = \"\";\n    var enc1,\n        enc2,\n        enc3,\n        enc4 = \"\";\n    var i = 0;\n\n    do {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n      enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n      enc4 = chr3 & 63;\n\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n\n      output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n      chr1 = chr2 = chr3 = \"\";\n      enc1 = enc2 = enc3 = enc4 = \"\";\n    } while (i < input.length);\n\n    return output;\n  },\n  decode: function decode(input) {\n    var output = \"\";\n    var chr1,\n        chr2,\n        chr3 = \"\";\n    var enc1,\n        enc2,\n        enc3,\n        enc4 = \"\";\n    var i = 0; // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\n    var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n\n    if (base64test.exec(input)) {\n      window.alert(\"There were invalid base64 characters in the input text.\\n\" + \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" + \"Expect errors in decoding.\");\n    }\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    do {\n      enc1 = keyStr.indexOf(input.charAt(i++));\n      enc2 = keyStr.indexOf(input.charAt(i++));\n      enc3 = keyStr.indexOf(input.charAt(i++));\n      enc4 = keyStr.indexOf(input.charAt(i++));\n      chr1 = enc1 << 2 | enc2 >> 4;\n      chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n      chr3 = (enc3 & 3) << 6 | enc4;\n      output = output + String.fromCharCode(chr1);\n\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n\n      chr1 = chr2 = chr3 = \"\";\n      enc1 = enc2 = enc3 = enc4 = \"\";\n    } while (i < input.length);\n\n    return output;\n  }\n};","map":{"version":3,"sources":["C:/Users/Gowal/Documents/GitHub/SwampTrash/node_modules/react-native-base64/base64.js"],"names":["keyStr","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","charCodeAt","isNaN","charAt","length","decode","base64test","exec","window","alert","replace","indexOf","String","fromCharCode"],"mappings":"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","sourcesContent":["let keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\nexport default {\r\n    encode: function(input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        do {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            output = output +\r\n                keyStr.charAt(enc1) +\r\n                keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) +\r\n                keyStr.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return output;\r\n    },\r\n\r\n    decode: function(input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n        if (base64test.exec(input)) {\r\n            window.alert(\"There were invalid base64 characters in the input text.\\n\" +\r\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\r\n                \"Expect errors in decoding.\");\r\n        }\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n        do {\r\n            enc1 = keyStr.indexOf(input.charAt(i++));\r\n            enc2 = keyStr.indexOf(input.charAt(i++));\r\n            enc3 = keyStr.indexOf(input.charAt(i++));\r\n            enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n            output = output + String.fromCharCode(chr1);\r\n\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n\r\n        } while (i < input.length);\r\n\r\n        return output;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}