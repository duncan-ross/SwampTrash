{"ast":null,"code":"import _classCallCheck from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/duncanross/Desktop/SwampTrash/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64';\nimport Converter from './converter';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.Converter = function (props) {\n      // props.setFile('.../public/images/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA.jpg');\n      var file = 'https://sc02.alicdn.com/kf/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA/232900318/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA.jpg';\n      var result, confidence;\n      var outputJSON;\n\n      var base64_encode = function base64_encode(file) {\n        return base64.encode(file); // // read binary data\n        // var bitmap = fs.readFileSync(file);\n        // // convert binary data to base64 encoded string\n        // return new Buffer(bitmap).toString('base64');\n      };\n\n      axios.defaults.headers.common['Content-Type'] = \"application/json\";\n      axios.defaults.headers.common['Authorization'] = \"Bearer ya29.c.Ko8BvweiEswHjnW0B4ym9z1sfuQ6qpa3R8GYdpxYa67pHOhFULl6VmUVVS4N15j0QcA4wKULUpGbb2rng50AA53VEJVl33P2tBzu4HYFce9IwTSMfljBzLNsi8Qem87KjoPVaknOCt8sR_w7VwnEdkAggHnEb32zILlZ7qrueDa1M-L6bngebz_PPg83UWMgyvg\"\n      /* Copy token key here */\n      ; // function to encode file data to base64 encoded string\n\n      var base = base64_encode(file);\n      axios.post(\"https://automl.googleapis.com/v1beta1/projects/766644774605/locations/us-central1/models/ICN5802549470285529088:predict\", {\n        \"payload\": {\n          \"image\": {\n            \"imageBytes\": base\n          }\n        }\n      }).then(function (res) {\n        if (Object.keys(res.data).length == 0) {\n          result = 'trash';\n          confidence = 99;\n        } else {\n          result = res.data.payload[0].displayName;\n          confidence = res.data.payload[0].classification.score;\n          confidence = confidence * 100;\n          confidence = Math.round(confidence);\n        }\n\n        var temp = {\n          \"result\": result,\n          \"confidence\": confidence\n        };\n        temp = JSON.stringify(temp);\n        outputJSON = JSON.parse(temp);\n        console.log(outputJSON); //     fs.writeFile('output.json', JSON.stringify(outputJSON), 'utf8', (err, data) => {\n        //         if (err) console.log(err);\n        //         else console.log('written');\n        // });\n      }).catch(function (err) {\n        console.log(err);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    };\n\n    _this.checkMimeType = function (event) {\n      //getting file object\n      var files = event.target.files; //define message container\n\n      var err = []; // list allow mime type\n\n      var types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(function (type) {\n          return files[x].type !== type;\n        })) {\n          // create error message and assign to container   \n          err[x] = files[x].type + ' is not a supported format.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.maxSelectFile = function (event) {\n      var files = event.target.files;\n\n      if (files.length > 3) {\n        var msg = 'Only 3 images can be uploaded at a time';\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.checkFileSize = function (event) {\n      var files = event.target.files;\n      var size = 2000000;\n      var err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + 'is too large, please pick a smaller file.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.onChangeHandler = function (event) {\n      var files = event.target.files;\n\n      if (_this.maxSelectFile(event) && _this.checkMimeType(event) && _this.checkFileSize(event)) {\n        // if return true allow to setState\n        _this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    _this.onClickHandler = function () {\n      var data = new FormData();\n\n      if (_this.state.selectedFile != null) {\n        for (var x = 0; x < _this.state.selectedFile.length; x++) {\n          data.append('file', _this.state.selectedFile[x]);\n        }\n\n        axios.post(\"http://localhost:8000/upload\", data, {\n          onUploadProgress: function onUploadProgress(ProgressEvent) {\n            _this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(function (res) {\n          // then print response status\n          toast.success('Upload Successful');\n        }).catch(function (err) {\n          // then print response status\n          toast.error('Upload Failed');\n        });\n      } else {\n        toast.error('No file selected.');\n      }\n    };\n\n    _this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"offset-md-3 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Upload Your File \"), React.createElement(\"input\", {\n        type: \"file\",\n        class: \"form-control\",\n        multiple: true,\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Progress, {\n        max: \"100\",\n        color: \"success\",\n        value: this.state.loaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Upload\"))), React.createElement(Converter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/duncanross/Desktop/SwampTrash/src/App.js"],"names":["React","Component","useState","axios","Progress","ToastContainer","toast","base64","Converter","App","props","file","result","confidence","outputJSON","base64_encode","encode","defaults","headers","common","base","post","then","res","Object","keys","data","length","payload","displayName","classification","score","Math","round","temp","JSON","stringify","parse","console","log","catch","err","checkMimeType","event","files","target","types","x","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","onClickHandler","FormData","state","append","onUploadProgress","ProgressEvent","total","success"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64'\nimport Converter from './converter';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded:0\n      }\n\n  }\n  Converter = (props) => {\n\n    // props.setFile('.../public/images/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA.jpg');\n    const file =  'https://sc02.alicdn.com/kf/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA/232900318/HTB1Y.V6aIrrK1Rjy1zeq6xalFXaA.jpg'\n\n    let result, confidence;\n    let outputJSON;\n\n    const base64_encode = (file) =>{\n\n        return base64.encode(file);\n\n        // // read binary data\n        // var bitmap = fs.readFileSync(file);\n        // // convert binary data to base64 encoded string\n        // return new Buffer(bitmap).toString('base64');\n    }\n\n        axios.defaults.headers.common['Content-Type'] = \"application/json\";\n        axios.defaults.headers.common['Authorization'] = \"Bearer ya29.c.Ko8BvweiEswHjnW0B4ym9z1sfuQ6qpa3R8GYdpxYa67pHOhFULl6VmUVVS4N15j0QcA4wKULUpGbb2rng50AA53VEJVl33P2tBzu4HYFce9IwTSMfljBzLNsi8Qem87KjoPVaknOCt8sR_w7VwnEdkAggHnEb32zILlZ7qrueDa1M-L6bngebz_PPg83UWMgyvg\"/* Copy token key here */;\n        // function to encode file data to base64 encoded string\n    \n        var base = base64_encode(file);\n        axios.post(\"https://automl.googleapis.com/v1beta1/projects/766644774605/locations/us-central1/models/ICN5802549470285529088:predict\",\n            {\n                \"payload\": {\n                    \"image\": {\n                        \"imageBytes\": base\n                    }\n                }\n            }).then(function(res){\n    \n                if (Object.keys(res.data).length == 0){\n                    result = 'trash'\n                    confidence = 99;\n                } else{\n                    result = res.data.payload[0].displayName;\n                    confidence = res.data.payload[0].classification.score;\n                    confidence = confidence * 100;\n                    confidence = Math.round(confidence);\n                }\n    \n                let temp = {\n                    \"result\" : result,\n                    \"confidence\" : confidence\n                };\n    \n                temp = JSON.stringify(temp);\n    \n                outputJSON = JSON.parse(temp);\n                console.log(outputJSON);\n            //     fs.writeFile('output.json', JSON.stringify(outputJSON), 'utf8', (err, data) => {\n            //         if (err) console.log(err);\n            //         else console.log('written');\n            // });\n        }).catch(function(err) {\n            console.log(err);\n        });\n    \n\n    return (\n        <div>\n            \n        </div>\n    );\n\n};\n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = []\n    // list allow mime type\n   const types = ['image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for(var x = 0; x<files.length; x++) {\n     // compare file type find doesn't matach\n         if (types.every(type => files[x].type !== type)) {\n         // create error message and assign to container   \n         err[x] = files[x].type+' is not a supported format.\\n';\n       }\n     };\n     for(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n         // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n   return true;\n  }\n  maxSelectFile=(event)=>{\n    let files = event.target.files\n        if (files.length > 3) { \n           const msg = 'Only 3 images can be uploaded at a time'\n           event.target.value = null\n           toast.warn(msg)\n           return false;\n      }\n    return true;\n }\n checkFileSize=(event)=>{\n  let files = event.target.files\n  let size = 2000000 \n  let err = []; \n  for(var x = 0; x<files.length; x++) {\n  if (files[x].size > size) {\n   err[x] = files[x].type+'is too large, please pick a smaller file.\\n';\n }\n};\nfor(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n  // discard selected file\n toast.error(err[z])\n event.target.value = null\n}\nreturn true;\n}\nonChangeHandler=event=>{\n  var files = event.target.files\n  if(this.maxSelectFile(event) && this.checkMimeType(event) &&    this.checkFileSize(event)){ \n  // if return true allow to setState\n     this.setState({\n     selectedFile: files,\n     loaded:0\n  })\n}\n}\n  onClickHandler = () => {\n    const data = new FormData()\n    if(this.state.selectedFile != null){ \n    for(var x = 0; x<this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x])\n    }\n    axios.post(\"http://localhost:8000/upload\", data, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n      },\n    })\n      .then(res => { // then print response status\n        toast.success('Upload Successful')\n      })\n      .catch(err => { // then print response status\n        toast.error('Upload Failed')\n      })\n    }\n    else{\n      toast.error('No file selected.')\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n\t      <div class=\"row\">\n      \t  <div class=\"offset-md-3 col-md-6\">\n               <div class=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" class=\"form-control\" multiple onChange={this.onChangeHandler}/>\n              </div>  \n              <div class=\"form-group\">\n              <ToastContainer />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n        \n              </div> \n              \n              <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n\n\t      </div>\n      </div>\n      <Converter\n      \n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}