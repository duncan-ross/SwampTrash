{"ast":null,"code":"import _classCallCheck from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/duncanross/Desktop/SwampTrash/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/duncanross/Desktop/SwampTrash/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.checkMimeType = function (event) {\n      //getting file object\n      var files = event.target.files; //define message container\n\n      var err = []; // list allow mime type\n\n      var types = ['image/png', 'image/jpeg', 'image/gif']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(function (type) {\n          return files[x].type !== type;\n        })) {\n          // create error message and assign to container   \n          err[x] = files[x].type + ' is not a supported format.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.maxSelectFile = function (event) {\n      var files = event.target.files;\n\n      if (files.length > 3) {\n        var msg = 'Only 3 images can be uploaded at a time';\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.checkFileSize = function (event) {\n      var files = event.target.files;\n      var size = 2000000;\n      var err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + 'is too large, please pick a smaller file.\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        // if message not same old that mean has error \n        // discard selected file\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.onChangeHandler = function (event) {\n      var files = event.target.files;\n\n      if (_this.maxSelectFile(event) && _this.checkMimeType(event) && _this.checkFileSize(event)) {\n        // if return true allow to setState\n        _this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    _this.onClickHandler = function () {\n      var data = new FormData();\n\n      if (_this.state.selectedFile != null) {\n        for (var x = 0; x < _this.state.selectedFile.length; x++) {\n          data.append('file', _this.state.selectedFile[x]);\n        }\n\n        axios.post(\"http://localhost:8000/upload\", data, {\n          onUploadProgress: function onUploadProgress(ProgressEvent) {\n            _this.setState({\n              loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n            });\n          }\n        }).then(function (res) {\n          // then print response status\n          toast.success('Upload Successful');\n        }).catch(function (err) {\n          // then print response status\n          toast.error('Upload Failed');\n        });\n      } else {\n        toast.error('No file selected.');\n      }\n    };\n\n    _this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"offset-md-3 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group files\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Upload Your File \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        multiple: true,\n        onChange: this.onChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Progress, {\n        max: \"100\",\n        color: \"success\",\n        value: this.state.loaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Upload\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/duncanross/Desktop/SwampTrash/src/App.js"],"names":["React","Component","useState","axios","Progress","ToastContainer","toast","base64","App","props","checkMimeType","event","files","target","err","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","Math","round"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport base64 from 'react-native-base64'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded:0\n      }\n\n  }\n  \n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = []\n    // list allow mime type\n   const types = ['image/png', 'image/jpeg', 'image/gif']\n    // loop access array\n    for(var x = 0; x<files.length; x++) {\n     // compare file type find doesn't matach\n         if (types.every(type => files[x].type !== type)) {\n         // create error message and assign to container   \n         err[x] = files[x].type+' is not a supported format.\\n';\n       }\n     };\n     for(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n         // discard selected file\n        toast.error(err[z])\n        event.target.value = null\n    }\n   return true;\n  }\n  maxSelectFile=(event)=>{\n    let files = event.target.files\n        if (files.length > 3) { \n           const msg = 'Only 3 images can be uploaded at a time'\n           event.target.value = null\n           toast.warn(msg)\n           return false;\n      }\n    return true;\n }\n checkFileSize=(event)=>{\n  let files = event.target.files\n  let size = 2000000 \n  let err = []; \n  for(var x = 0; x<files.length; x++) {\n  if (files[x].size > size) {\n   err[x] = files[x].type+'is too large, please pick a smaller file.\\n';\n }\n};\nfor(var z = 0; z<err.length; z++) {// if message not same old that mean has error \n  // discard selected file\n toast.error(err[z])\n event.target.value = null\n}\nreturn true;\n}\nonChangeHandler=event=>{\n  var files = event.target.files\n  if(this.maxSelectFile(event) && this.checkMimeType(event) &&    this.checkFileSize(event)){ \n  // if return true allow to setState\n     this.setState({\n     selectedFile: files,\n     loaded:0\n  })\n}\n}\n  onClickHandler = () => {\n    const data = new FormData()\n    if(this.state.selectedFile != null){ \n    for(var x = 0; x<this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x])\n    }\n    axios.post(\"http://localhost:8000/upload\", data, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n      },\n    })\n      .then(res => { // then print response status\n        \n        toast.success('Upload Successful')\n\n        \n      })\n      .catch(err => { // then print response status\n        toast.error('Upload Failed')\n      })\n    }\n    else{\n      toast.error('No file selected.')\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n\t      <div className=\"row\">\n      \t  <div className=\"offset-md-3 col-md-6\">\n               <div className=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" className=\"form-control\" multiple onChange={this.onChangeHandler}/>\n              </div>  \n              <div className=\"form-group\">\n              <ToastContainer />\n              <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n        \n              </div> \n              \n              <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n\n\t      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}