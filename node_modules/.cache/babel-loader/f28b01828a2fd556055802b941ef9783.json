{"ast":null,"code":"/**\r\n * fetch-error.js\r\n *\r\n * FetchError interface for operational errors\r\n */\nmodule.exports = FetchError;\n/**\r\n * Create FetchError instance\r\n *\r\n * @param   String      message      Error message for human\r\n * @param   String      type         Error type for machine\r\n * @param   String      systemError  For Node.js system error\r\n * @return  FetchError\r\n */\n\nfunction FetchError(message, type, systemError) {\n  this.name = this.constructor.name;\n  this.message = message;\n  this.type = type; // when err.type is `system`, err.code contains system error code\n\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  } // hide custom error implementation details from end-users\n\n\n  Error.captureStackTrace(this, this.constructor);\n}\n\nrequire('util').inherits(FetchError, Error);","map":{"version":3,"sources":["C:/Users/Gowal/Documents/GitHub/SwampTrash/node_modules/node-fetch/lib/fetch-error.js"],"names":["module","exports","FetchError","message","type","systemError","name","constructor","code","errno","Error","captureStackTrace","require","inherits"],"mappings":"AACA;;;;;AAMAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;;;;;;;;;AAQA,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,WAAnC,EAAgD;AAE/C,OAAKC,IAAL,GAAY,KAAKC,WAAL,CAAiBD,IAA7B;AACA,OAAKH,OAAL,GAAeA,OAAf;AACA,OAAKC,IAAL,GAAYA,IAAZ,CAJ+C,CAM/C;;AACA,MAAIC,WAAJ,EAAiB;AAChB,SAAKG,IAAL,GAAY,KAAKC,KAAL,GAAaJ,WAAW,CAACG,IAArC;AACA,GAT8C,CAW/C;;;AACAE,EAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8B,KAAKJ,WAAnC;AACA;;AAEDK,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAAhB,CAAyBX,UAAzB,EAAqCQ,KAArC","sourcesContent":["\r\n/**\r\n * fetch-error.js\r\n *\r\n * FetchError interface for operational errors\r\n */\r\n\r\nmodule.exports = FetchError;\r\n\r\n/**\r\n * Create FetchError instance\r\n *\r\n * @param   String      message      Error message for human\r\n * @param   String      type         Error type for machine\r\n * @param   String      systemError  For Node.js system error\r\n * @return  FetchError\r\n */\r\nfunction FetchError(message, type, systemError) {\r\n\r\n\tthis.name = this.constructor.name;\r\n\tthis.message = message;\r\n\tthis.type = type;\r\n\r\n\t// when err.type is `system`, err.code contains system error code\r\n\tif (systemError) {\r\n\t\tthis.code = this.errno = systemError.code;\r\n\t}\r\n\r\n\t// hide custom error implementation details from end-users\r\n\tError.captureStackTrace(this, this.constructor);\r\n}\r\n\r\nrequire('util').inherits(FetchError, Error);\r\n"]},"metadata":{},"sourceType":"script"}